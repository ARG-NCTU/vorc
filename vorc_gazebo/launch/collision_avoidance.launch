<?xml version="1.0"?>
<launch>
  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find vrx_gazebo)/config/custom_rosconsole.conf"/>
  
  <!-- Gazebo world to load -->
  <arg name="world" default="$(find vorc_gazebo)/worlds/collision_avoidance.world" />
  
  <!-- If true, run gazebo GUI -->
  <arg name="gui" default="true" />
  
  <!-- If true, run gazebo in verbose mode -->
  <arg name="verbose" default="false"/>
  
  <!-- Set various other gazebo arguments-->
  <arg name="extra_gazebo_args" default=""/>
  
  <!-- Start in a default namespace -->
  <arg name="namespace" default="cora"/>
  
  <!-- Do we lock the vessel to the world? -->
  <arg name="robot_locked" default="false" />
  
  <!-- Start paused? -->
  <arg name="paused" default="false"/>
  
  <!-- Acoustic pinger position(s) -->
  <arg name="pinger_params" default="$(find vorc_gazebo)/config/pinger.yaml"/>

  <arg name="thruster_config" default="M" />

  <!-- Initial USV location and attitude -->
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="z" default="0.1" />
  <arg name="P" default="0" />
  <arg name="R" default="0" />
  <arg name="Y" default="1" />

  <!-- Start Gazebo with the world file -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"   value="$(arg world)"/>
    <arg name="verbose"      value="$(arg verbose)"/>
    <arg name="paused"       value="$(arg paused)"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui"          value="$(arg gui)" />
    <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
  </include>

  <!-- Cora URDF -->
  <arg name="urdf" default="$(find cora_description)/urdf/cora.xacro"/>

  <param name="$(arg namespace)/robot_description"
       command="$(find xacro)/xacro --inorder '$(arg urdf)'
       locked:=$(arg robot_locked)
       namespace:=$(arg namespace)
       thruster_config:=$(arg thruster_config)"/>

  <!-- Robot State Publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="use_sim_time" value="true" />
    <remap from="robot_description" to="$(arg namespace)/robot_description" />
    <remap from="joint_states" to="$(arg namespace)/joint_states" />
  </node>

  <!-- Spawn model in Gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg R) -P $(arg P) -Y $(arg Y)
              -urdf -param $(arg namespace)/robot_description -model cora"/>

  <!-- Set the pinger location -->
  <node name="set_pinger_position" pkg="vorc_gazebo" type="set_pinger_position.py" output="screen">
    <rosparam command="load" file="$(arg pinger_params)" />
  </node>
  <node name="pinger_visualization" pkg="vorc_gazebo" type="pinger_visualization.py" />
</launch>
